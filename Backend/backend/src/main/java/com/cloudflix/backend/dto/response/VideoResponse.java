// src/main/java/com/cloudflix/backend/dto/response/VideoResponse.java
package com.cloudflix.backend.dto.response;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.HashSet; // Import for addTag/removeTag if you keep them
import java.util.Set;
import java.util.stream.Collectors;
import com.cloudflix.backend.entity.Video;
import com.cloudflix.backend.entity.Tag;
import com.cloudflix.backend.entity.User; // Make sure User is imported if using uploader directly

@Data
@NoArgsConstructor
@AllArgsConstructor
public class VideoResponse {
    private Long id;
    private String title;
    private String description;
    private Integer durationSeconds;
    private String genre;
    private String storageObjectKey;
    private String thumbnailUrl;
    private String hlsManifestUrl;
    private LocalDateTime uploadTimestamp;
    private String status;
    private Long viewCount;
    private Set<String> tags;
    private UploaderInfo uploader;
    
    public VideoResponse() {}
    
    public VideoResponse(Long id, String title, String description, Integer durationSeconds,String genre, String storageObjectKey, String thumbnailUrl,
            String hlsManifestUrl, LocalDateTime uploadTimestamp, String status,Long viewCount, Set<String> tags, UploaderInfo uploader) {
    			this.id = id;
    			this.title = title;
    			this.description = description;
    			this.durationSeconds = durationSeconds;
    			this.genre = genre;
    			this.storageObjectKey = storageObjectKey;
    			this.thumbnailUrl = thumbnailUrl;
    			this.hlsManifestUrl = hlsManifestUrl;
    			this.uploadTimestamp = uploadTimestamp;
    			this.status = status;
    			this.viewCount = viewCount;
    			this.tags = tags; // Assign the provided set
    			this.uploader = uploader;
    }

    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    public static class UploaderInfo {
          private Long id;
          private String name;

          public UploaderInfo() {} // Manual No-Arg Constructor

          public UploaderInfo(Long id, String name) { // Manual All-Args Constructor
              this.id = id;
              this.name = name;
          }

          // Manual Getters and Setters for UploaderInfo
          public Long getId() { return id; }
          public void setId(Long id) { this.id = id; }
          public String getName() { return name; }
          public void setName(String name) { this.name = name; }
    }
    


    public static VideoResponse fromEntity(Video video) {
        if (video == null) {
            return null;
        }

        Set<String> tagNames = video.getTags().stream()
                                   .map(Tag::getName)
                                   .collect(Collectors.toSet());

        UploaderInfo uploaderInfo = null;
        User videoUploader = video.getUploader();
        if (videoUploader != null) {
            uploaderInfo = new UploaderInfo(
                videoUploader.getId(),
                videoUploader.getFirstName()
            );
        }

        // This constructor is automatically generated by @AllArgsConstructor
        return new VideoResponse(
                video.getId(),
                video.getTitle(),
                video.getDescription(),
                video.getDurationSeconds(),
                video.getGenre(),
                video.getStorageObjectKey(),
                video.getThumbnailUrl(),
                video.getHlsManifestUrl(),
                video.getUploadTimestamp(),
                video.getStatus(),
                video.getViewCount(),
                tagNames,
                uploaderInfo
        );
    }

    // Optional helper methods for tags, if you want to modify the DTO after creation
    // If the DTO is meant to be immutable after creation by fromEntity, you can remove these.
    public void addTag(String tag) {
        if (this.tags == null) {
            this.tags = new HashSet<>();
        }
        this.tags.add(tag);
    }

    public void removeTag(String tag) {
         if (this.tags != null) {
            this.tags.remove(tag);
        }
    }
    
 // Add these methods below your field declarations

    // --- Getters ---

    public Long getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public Integer getDurationSeconds() {
        return durationSeconds;
    }

    public String getGenre() {
        return genre;
    }

    public String getStorageObjectKey() {
        return storageObjectKey;
    }

    public String getThumbnailUrl() {
        return thumbnailUrl;
    }

    public String getHlsManifestUrl() {
        return hlsManifestUrl;
    }

    public LocalDateTime getUploadTimestamp() {
        return uploadTimestamp;
    }

    public String getStatus() {
        return status;
    }

    public Long getViewCount() {
        return viewCount;
    }

    public Set<String> getTags() {
        return tags;
    }

    public UploaderInfo getUploader() {
        return uploader;
    }


    // --- Setters ---
    // Note: For fields like 'id' and 'uploadTimestamp' that might be
    // database-generated or set on creation, you might choose not to
    // include setters if you don't want them to be modified directly.

    public void setId(Long id) {
        this.id = id;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setDurationSeconds(Integer durationSeconds) {
        this.durationSeconds = durationSeconds;
    }

    public void setGenre(String genre) {
        this.genre = genre;
    }

    public void setStorageObjectKey(String storageObjectKey) {
        this.storageObjectKey = storageObjectKey;
    }

    public void setThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
    }

    public void setHlsManifestUrl(String hlsManifestUrl) {
        this.hlsManifestUrl = hlsManifestUrl;
    }

    public void setUploadTimestamp(LocalDateTime uploadTimestamp) {
        this.uploadTimestamp = uploadTimestamp;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public void setViewCount(Long viewCount) {
        this.viewCount = viewCount;
    }

    public void setTags(Set<String> tags) {
        this.tags = tags;
    }

    public void setUploader(UploaderInfo uploader) {
        this.uploader = uploader;
    }

}